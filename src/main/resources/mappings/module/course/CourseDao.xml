<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.module.course.dao.CourseDao">

<resultMap type="com.module.course.entity.Course" id="CourseResultMap">
	<result property="courseId" column="course_id"/>
	<result property="courseName" column="course_Name"/>
	<result property="teacherId" column="teacher_id"/>
	<result property="teacherName" column="teacher_name"/>
	<result property="courseType" column="course_type"/>
	<result property="introduce" column="course_introduce"/>
	<result property="createTime" column="create_time"/>
	<result property="status" column="status"/>
	<result property="departId" column="depart_id"/>
	<result property="isCommon" column="is_common"/>
</resultMap>

<select id="queryCommonCourse" resultType="Course">
		SELECT 	DISTINCT
						a.course_id, 
						a.course_name, 
						a.teacher_id, 
						a.depart_id,
						d.user_name AS "teacherName", 
						a.course_introduce, 
						a.create_time
		FROM 		hotel_course  a
		LEFT JOIN hotel_resource b ON b.relation_id = a.course_id
		LEFT JOIN hotel_userdetail d ON d.user_id = a.teacher_id
		LEFT JOIN hotel_user e ON a.schoolId = e.schoolId
		WHERE a.is_common !="0" AND (a.schoolId = "0" OR a.schoolId = #{schoolId})
		<if test="courseName != null and courseName !='' ">
	   		AND a.course_name LIKE CONCAT('%', #{courseName}, '%')
		</if>
		
		
</select>

<select id="queryCourseByUserId" parameterType="Course" resultType="Course">
		SELECT   DISTINCT
					  e.course_id,
					  e.course_name,
					  e.course_introduce AS "introduce",
					  a.user_name AS "teacherName",
					  e.create_time
		FROM    hotel_userdetail a,
					  hotel_user_role b,
					  hotel_role_resource c,
					  hotel_resource d,
					  hotel_course e
		WHERE  	a.user_id = e.teacher_id
				     AND b.role_id = c.role_id
				     AND d.resource_id = c.resource_id
				     AND d.relation_id = e.course_id
				     AND b.user_id = #{userId}
				     AND e.status='1'
		<if test="isCommon != null and isCommon !='' ">
	   		AND e.is_common = #{isCommon}
		</if>
		<if test="courseName != null and courseName !='' ">
	   		AND e.course_name LIKE CONCAT('%', #{courseName}, '%')
		</if>
		<if test="teacherName != null and teacherName !='' ">
	   		AND a.user_name LIKE CONCAT('%', #{teacherName}, '%')
		</if>
</select>

<select id="checkIsExist" resultType="java.lang.String">
		SELECT course_name FROM hotel_course WHERE status='1'
</select>

<select id="queryTeacherCourse" parameterType="Course"  resultMap="CourseResultMap">
			SELECT a.course_id,a.course_Name,a.teacher_id,a.course_introduce,a.create_time
			FROM hotel_course a  
			WHERE a.teacher_id = #{userId} AND a.status != '0'
		<if test="courseName != null and courseName !='' ">
	   		AND a.course_name LIKE CONCAT('%', #{courseName}, '%')
		</if>
		<if test="isCommon!= null and isCommon!='' ">
	   		AND a.is_common=#{isCommon}
		</if>
			ORDER BY  a.create_time DESC
</select>

<select id="fetchCourseById"  resultMap="CourseResultMap">
			SELECT a.* 
			FROM hotel_course a  
			WHERE a.status != '0' AND a.status !='9' AND a.course_id = #{courseId}
</select>

<delete id="deleteCourseById"> 
	DELETE from hotel_course where course_id = #{courseId}
</delete>

<insert id="insertCourse" parameterType="com.module.course.entity.Course"> 
	INSERT INTO hotel_course (course_name, teacher_id, course_introduce,create_time,status,is_common,schoolId ) 
	VALUES (#{courseName}, #{teacherId}, #{introduce}, #{createTime},#{status},#{isCommon},#{schoolId} )
</insert>

<update id="updateCourse" parameterType="com.module.course.entity.Course">
    UPDATE hotel_course SET
    	<if test="courseName != null and courseName !='' ">
	        course_name = #{courseName},
	    </if>
	        teacher_id = #{teacherId},
	        course_introduce = #{introduce},
	        create_time = #{createTime},
	        is_common = #{isCommon}
   	 WHERE course_id = #{courseId}
  </update>
  
  <update id="updateCourseCompleteStatus" parameterType="com.module.course.entity.Course">
    update hotel_course
    set  status = #{status}
    where course_id = #{courseId}
  </update>

</mapper>